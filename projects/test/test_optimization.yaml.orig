operation_points:
  fluid_name: R125
  T0_in: 190 + 273.15
  p0_in: 36.2e5
  p_out : 15.85e5 
  omega: 3810
  alpha_in: 0


model_options:
  deviation_model : aungier
  blockage_model : 0.00  #flat_plate_turbulent
  choking_model : evaluate_cascade_isentropic_throat # evaluate_cascade_critical, evaluate_cascade_throat, evaluate_cascade_isentropic_throat
  # rel_step_fd: 1e-4
  loss_model:
    model: kacker_okapuu
    loss_coefficient: stagnation_pressure
    inlet_displacement_thickness_height_ratio: 0.011
    tuning_factors:
      profile: 1.00
      incidence: 1.00
      secondary: 1.00
      trailing: 1.00
      clearance: 1.00

# solver:
#   method: lm
#   tolerance: 1e-9
#   max_iterations: 50
#   derivative_method: "2-point"
#   derivative_rel_step: 1e-3
#   display_progress: True

solver_options:
  method: hybr
  tol: 1e-8
  max_iterations: 100
  derivative_method: "2-point"
  derivative_rel_step: 1e-3
  display_progress: True


geometry:
  cascade_type: ["stator", "rotor"]
  radius_hub_in: [0.0296558098722470, 0.0296558098722470]
  radius_hub_out: [0.0296557863275598, 0.0283522027992326]
  radius_tip_in: [0.0494263527986391, 0.0494263763433263]
  radius_tip_out: [0.0494263763433263, 0.0507299598716535]
  pitch: [0.00565199385536298, 0.00662803455257531]
  chord: [0.0106473088612715, 0.0106239763108052] 
  stagger_angle: [0.698131700797732*180/np.pi, -0.801170263530059*180/np.pi] 
  opening: [0.000981458433168469, 0.00151267676911608]
  leading_edge_diameter: [2*0.00600448, 2*0.00600448] 
  leading_edge_wedge_angle: [45.00, 45.00] 
  leading_edge_angle: [0*180/np.pi, -0.261797383150813*180/np.pi] 
  trailing_edge_thickness: [4.90729216584235e-05, 7.56338384558042e-05] 
  maximum_thickness: [0.00212946177225429, 0.00188320045342651] 
  tip_clearance: [0.00, 5e-4] 
  throat_location_fraction: [1, 1]

optimization:
  objective_function: efficiency_ts
  radius_type : constant_mean
  design_variables :
    - specific_speed 
    - blade_jet_ratio 
    - hub_tip_ratio_in
    - hub_tip_ratio_out 
    - aspect_ratio 
    - pitch_chord_ratio 
    - trailing_edge_thickness_opening_ratio  
    - leading_edge_angle
    - gauging_angle 
  constraints :
    - variable : mass_flow_rate
      type : "="
      value : 10.66
      normalize : True 
    - variable : interstage_flaring 
      type : "="
      value : 1
      normalize : True
    # - variable : mass_flow_rate
    #   type : "<"
    #   value : 20
    #   normalize : True 

  solver_options:
<<<<<<< HEAD
    max_iter: 100
=======
    library: pygmo
    method: snopt
    tolerance: 1e-3
    max_iterations: 300
    derivative_method: 2-point
    # derivative_abs_step: 1e-6
    print_convergence: True
    plot_convergence: True
    update_on: "gradient"

# Roberto: changed from relative to absolute step because it was giving problems for variables that can take a value equal to zero

# Roberto: lessons learned after some experimentation:
#  - Increasing the size/scale of the objective function (efficiency) helps convergence (it also makes optimization more aggresive)
#  - SNOPT and other solvers struggles to converge when tol<1e-3
#  - If derivative_abs_step is not provided the new wrapper will use a suitable value
#     - eps^(1/2) for forward finite differences (2-point in Scipy's terminology)
#     - eps^(1/3) for central finite differences (3-point in Scipy's terminology)
#  - SLSQP and SNOPT solvers converge better when using the "optimal" step size (is it always the case?)
#  - I also experienced better termination using the 3-point method. This suggest that accurate finite differences are necessary for proper termination to tight tolerance
#  Is the termination not working well because of inaccurate finite differences, or because there is a non-smooth function being triggered? (abs, min, max, if's). We should scan the code and replace by smoothed functions from math module
>>>>>>> e44028cee3372d4d5f6e49bd6cce6d57688b10d5
